#!/bin/bash

# Ben Bass 2012 @codedstructure

# Note various things are wrapped in double-quotes to ensure
# that things with spaces are handled OK.

EDITFILE_DIR=~/Dropbox/editfile
mkdir -p $EDITFILE_DIR  # ensure this exists
MAJOR_NAME=$(basename "$0")

if [[ $MAJOR_NAME = "editfile" ]] ; then
    echo 'this script should not be run directly but from a symlink to it'
    exit 1
fi

edit () {
    # Determine editor to use
    if [[ -n "${EDITOR}" ]] ; then
        EDIT=$EDITOR
    elif $(which gedit) ; then
        EDIT="gedit -b"  # default fallback if present
    else
        EDIT="vim"       # fallback if no gedit there
    fi

    # Edit it...
    $EDIT "$1"
}

usage () {
    echo "Usage: $MAJOR_NAME [OPTIONS] [CATEGORY]"
    echo "  default operation is to edit the file"
    echo
    echo "Options:"
    echo "  -h    this help"
    echo "  -a    append stdin to the file"
    echo "  -l    output the file to stdout"
    echo " (Note these options are mutually exclusive)"
    echo
    exit 1
}

MODE='';
while getopts "alh" option ; do
    case $option in
        'a')
            if [[ -z $MODE ]] ; then MODE="APPEND"; else usage; fi
            ;;
        'l')
            if [[ -z $MODE ]] ; then MODE="LIST"; else usage; fi
            ;;
        'h')
            usage
            ;;
        *)
            echo "Invalid option"
            echo
            usage
            ;;
    esac
done

shift $(($OPTIND - 1))

if [[ $# -gt 1 ]]; then
    echo "Too many arguments"
    echo
    usage
fi

if [[ -n "$1" ]]; then
    # edit a sub-file
    TARGET_DIR=$EDITFILE_DIR/$(basename $0)
    mkdir -p $TARGET_DIR
    TARGET_PATH="$TARGET_DIR/$1"
else
    # edit the 'main' file
    TARGET_PATH="$EDITFILE_DIR/${MAJOR_NAME}"
fi

# support for various extensions.
# Will always default to .txt if nothing already there.
# Up to the user to change / create ext of different type.
# Hopefully once an editor opens the user can see which
# actual file got selected :-)
if ! [[ $TARGET_PATH =~ \.(rst|txt|md)$ ]] ; then
    for EXT in .rst .md .txt ; do
        [[ -f "${TARGET_PATH}${EXT}" ]] && break
    done
    TARGET_PATH="${TARGET_PATH}${EXT}"
fi

case $MODE in
    'LIST')
        # list file and exit
        cat "$TARGET_PATH"
        ;;
    'APPEND')
        cat /dev/stdin >> "$TARGET_PATH"
        ;;
    '')
        # Edit it...
        edit "$TARGET_PATH"
        ;;
esac
